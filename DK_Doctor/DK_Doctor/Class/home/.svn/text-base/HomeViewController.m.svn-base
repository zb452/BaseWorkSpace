//
//  HomeViewController.m
//  DK_Doctor
//
//  Created by 张斌 on 2017/1/16.
//  Copyright © 2017年 陕西医管家医院管理咨询服务有限公司. All rights reserved.
//

#import "HomeViewController.h"
#import "DKZoomHelper.h"
#import "DKHyChatHelper.h"
#import "TeamTableViewCell.h"
#import "MJRefresh.h"
#import "AdressBookViewModel.h"
#import "UIView+YGJFrame.h"
#import "SearchViewController.h"
#import "TeamMemberViewController.h"
#import "UIScrollView+EmptyDataSet.h"


#define TeamCellHeight 80
#define adressSectionHeight 44

@interface HomeViewController ()<UITableViewDataSource,UITableViewDelegate,UISearchResultsUpdating,UISearchBarDelegate,TeamTableDelegate,DZNEmptyDataSetSource,DZNEmptyDataSetDelegate>
@property(weak,nonatomic)IBOutlet UITableView *tableView;
@property(strong,nonatomic)NSArray *aryTeam;
@property(strong,nonatomic)AdressBookViewModel *ViewModel;

@property (nonatomic, strong) UISearchController *searchController;

@end

@implementation HomeViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
-(void)initUI
{
    [super initUI];
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    [self.tableView registerNib:[UINib nibWithNibName:@"TeamTableViewCell" bundle:nil] forCellReuseIdentifier:@"TeamTableViewCell"];
    
    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(pullUp)];

    self.searchController = [[UISearchController  alloc] initWithSearchResultsController:nil];
    _searchController.searchResultsUpdater = self;
    
   // _searchController.dimsBackgroundDuringPresentation = YES;
    
    _searchController.searchBar.placeholder = @"可直接搜索医生姓名";
    _searchController.searchBar.delegate = self;
    
    self.searchController.searchBar.frame = CGRectMake(self.searchController.searchBar.frame.origin.x,
                                                       self.searchController.searchBar.frame.origin.y,
                                                       self.searchController.searchBar.frame.size.width, 44.0);
    
    self.tableView.tableHeaderView = _searchController.searchBar;
    self.edgesForExtendedLayout = UIRectEdgeNone;
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    
    
    self.definesPresentationContext = YES;
    
}

-(void)initData
{
    [super initData];
    
    self.title = @"团队";
    
    self.ViewModel = [[AdressBookViewModel alloc] init];
    
    self.tableView.emptyDataSetDelegate = self;
    self.tableView.emptyDataSetSource = self;
    
    __weak typeof (self)weakSelf = self;
    [DefaultNotificationCenter addObserverForName:EnterOk object:nil queue:[NSOperationQueue mainQueue] usingBlock:^(NSNotification * _Nonnull note) {
        
        [weakSelf.tableView.mj_header beginRefreshing];
        [weakSelf pullUp];
    }];
    
    //强制下线了，刷新界面
    [DefaultNotificationCenter addObserverForName:DKNotificationDoctorForceQuit object:nil queue:[NSOperationQueue mainQueue] usingBlock:^(NSNotification * _Nonnull note) {
        
        [weakSelf realodUIData];

    }];
    
}

-(NSArray *)aryTeam
{
    if (!_aryTeam)
    {
        _aryTeam = [NSArray array];
    }
    
    return _aryTeam;
}

#pragma mark- Action
-(void)realodUIData
{
    __weak typeof (self)weakSelf = self;
    [weakSelf.ViewModel getMyAboutTeam:NO willSend:^{
        [weakSelf.tableView reloadData];
    } Success:^{
        [weakSelf.tableView.mj_header endRefreshing];
  //      weakSelf.tableView.tableHeaderView = _searchController.searchBar;
        [weakSelf.tableView reloadData];
    } Fail:^(NSString *errorMsg) {
 //       weakSelf.tableView.tableHeaderView = nil;
        [weakSelf.tableView.mj_header endRefreshing];
        [MBProgressHUD showHideMessage:errorMsg];
    }];

}
#pragma mark- Action
-(void)pullUp
{
    __weak typeof (self)weakSelf = self;
    [weakSelf.ViewModel getMyAboutTeam:YES willSend:^{
        [weakSelf.tableView reloadData];
    } Success:^{
        [weakSelf.tableView.mj_header endRefreshing];
     //   weakSelf.tableView.tableHeaderView = _searchController.searchBar;
        [weakSelf.tableView reloadData];
    } Fail:^(NSString *errorMsg) {
        [weakSelf.tableView.mj_header endRefreshing];
      //  weakSelf.tableView.tableHeaderView = nil;
        [weakSelf.tableView reloadData];
        [MBProgressHUD showHideMessage:errorMsg];
    }];
}


/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

#pragma mark- UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    if (self.ViewModel.isNetWorkBad || self.ViewModel.isWaitData)
    {
        return 0;
    }
    return 2;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.ViewModel countWithindex:section];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    Team *team;
    if (indexPath.section == 0)
    {
        team = [self.ViewModel myTeam:indexPath.row];
    }
    else
    {
        team = [self.ViewModel otherTeam:indexPath.row];
    }
    
    TeamTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"TeamTableViewCell" forIndexPath:indexPath];
    
    [cell configWith:team];
    cell.delegate = self;
    
    return cell;
}
#pragma mark- UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{

    return TeamCellHeight;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return adressSectionHeight;
}
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return SectionNoHeight;
}
- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    if (self.ViewModel.isNetWorkBad || self.ViewModel.isWaitData)
    {
        return nil;
    }

    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, tableView.width, adressSectionHeight)];
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(15, adressSectionHeight/2.0, tableView.width, adressSectionHeight/2.0)];
    [view addSubview:label];
    label.textColor = [UIColor colorWithHexString:@"#bcbcbc"];
    label.font = [UIFont systemFontOfSize:16];
    if (section == 0)
    {
        label.text = @"我的团队";
    }
    else
    {
        label.text = @"我的协作团队";
    }
    
    return view;

}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    Team *team;
    if (indexPath.section == 0)
    {
        team = [self.ViewModel myTeam:indexPath.row];
    }
    else
    {
        team = [self.ViewModel otherTeam:indexPath.row];
    }
    TeamMemberViewController *teamMemberVC = [[TeamMemberViewController alloc] initWithNibName:@"TeamMemberViewController" bundle:nil withTeam:team];
    
    teamMemberVC.hidesBottomBarWhenPushed = YES;
    
    [self.navigationController pushViewController:teamMemberVC animated:YES];
}
#pragma mark- UISearchResultsUpdating
- (void)updateSearchResultsForSearchController:(UISearchController *)searchController
{
    NSString *searchString = [self.searchController.searchBar text];
    
    
    [self.tableView reloadData];
}
#pragma mark- UISearchBarDelegate
- (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar
{
//    self.tableView.tableHeaderView = nil;
//    [self.tableView reloadData];
    
    
    return YES;
}
- (BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar
{
//    self.headerBackView.hidden = NO;
//    self.headerHeight.constant = 30;
    
//    self.tableView.tableHeaderView = _searchController.searchBar;
//    [self.tableView reloadData];
    
    return YES;
}

#pragma mark- TeamTableDelegate <NSObject>

/**
 向团队发起视频

 @param cell
 */
-(void)callTeam:(TeamTableViewCell *)cell Team:(Team *)team
{
    [self.ViewModel startMeetingWithTeam:team Success:^{
        
    } Fail:^(NSString *errorMsg) {
        [MBProgressHUD showHideMessage:errorMsg];
    }];
    
//    [DefaultNotificationCenter postNotificationName:DKTeamStartMeeting object:self userInfo:[NSDictionary dictionaryWithObjectsAndKeys:@"",@"", nil]];
}

#pragma mark- DZNEmptyDataSetSource
- (UIView *)customViewForEmptyDataSet:(UIScrollView *)scrollView
{
    if (self.ViewModel.isWaitData)
    {
        UIActivityIndicatorView *activityView = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
        [activityView startAnimating];
        
        return activityView;
    }
    
    return nil;
}
- (NSAttributedString *)titleForEmptyDataSet:(UIScrollView *)scrollView
{
    if (self.ViewModel.isNetWorkBad)
    {
        NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:[UIFont systemFontOfSize:18],NSFontAttributeName,[UIColor colorWithHexString:@"#3d3d3d"],NSForegroundColorAttributeName,nil];
        return [[NSAttributedString alloc] initWithString:NetWorkBadWord attributes:dic];
    }
    
    return nil;
}

- (UIImage *)imageForEmptyDataSet:(UIScrollView *)scrollView
{
    if (self.ViewModel.isNetWorkBad)
    {
        return [UIImage imageNamed:NetWorkBadImage];
    }
    
    return nil;
}
- (UIImage *)buttonImageForEmptyDataSet:(UIScrollView *)scrollView forState:(UIControlState)state
{
    if (self.ViewModel.isNetWorkBad)
    {
        return [UIImage imageNamed:NetWorkBadBtnImage];
    }
    
    return nil;
}

#pragma mark- DZNEmptyDataSetDelegate
- (void)emptyDataSetDidTapButton:(UIScrollView *)scrollView
{
    __weak typeof (self)weakSelf = self;
    [weakSelf.ViewModel getMyAboutTeam:YES willSend:^{
        [weakSelf.tableView reloadData];
    } Success:^{
     //   weakSelf.tableView.tableHeaderView = _searchController.searchBar;
        [weakSelf.tableView reloadData];
    } Fail:^(NSString *errorMsg) {
     //   weakSelf.tableView.tableHeaderView = nil;
        [weakSelf.tableView reloadData];
        [MBProgressHUD showHideMessage:errorMsg];
    }];

}




@end
